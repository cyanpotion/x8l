/**
 * Scaffolding file used to store all the setups needed to run
 * tests automatically generated by EvoSuite
 * Tue Apr 05 20:56:04 GMT 2022
 */

package com.xenoamess.x8l;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.evosuite.runtime.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

import static org.mockito.Mockito.mock;

@EvoSuiteClassExclude
public class RootNode_ESTest_scaffolding {

    @org.junit.Rule
    public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

    private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone();

    private org.evosuite.runtime.thread.ThreadStopper threadStopper = new org.evosuite.runtime.thread.ThreadStopper(org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


    @BeforeClass
    public static void initEvoSuiteFramework() {
        org.evosuite.runtime.RuntimeSettings.className = "com.xenoamess.x8l.RootNode";
        org.evosuite.runtime.GuiSupport.initialize();
        org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100;
        org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000;
        org.evosuite.runtime.RuntimeSettings.mockSystemIn = true;
        org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED;
        org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT();
        org.evosuite.runtime.classhandling.JDKClassResetter.init();
        setSystemProperties();
        initializeClasses();
        org.evosuite.runtime.Runtime.getInstance().resetRuntime();
        try {
            initMocksToAvoidTimeoutsInTheTests();
        } catch (ClassNotFoundException e) {
        }
    }

    @AfterClass
    public static void clearEvoSuiteFramework() {
        Sandbox.resetDefaultSecurityManager();
        java.lang.System.setProperties((java.util.Properties) defaultProperties.clone());
    }

    @Before
    public void initTestCase() {
        threadStopper.storeCurrentThreads();
        threadStopper.startRecordingTime();
        org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler();
        org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode();
        setSystemProperties();
        org.evosuite.runtime.GuiSupport.setHeadless();
        org.evosuite.runtime.Runtime.getInstance().resetRuntime();
        org.evosuite.runtime.agent.InstrumentingAgent.activate();
    }

    @After
    public void doneWithTestCase() {
        threadStopper.killAndJoinClientThreads();
        org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks();
        org.evosuite.runtime.classhandling.JDKClassResetter.reset();
        resetClasses();
        org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode();
        org.evosuite.runtime.agent.InstrumentingAgent.deactivate();
        org.evosuite.runtime.GuiSupport.restoreHeadlessMode();
    }

    public static void setSystemProperties() {

        java.lang.System.setProperties((java.util.Properties) defaultProperties.clone());
        java.lang.System.setProperty("file.encoding", "GBK");
        java.lang.System.setProperty("java.awt.headless", "true");
        java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\xenoa\\AppData\\Local\\Temp\\");
        java.lang.System.setProperty("user.country", "CN");
        java.lang.System.setProperty("user.dir", "F:\\workspace\\x8l");
        java.lang.System.setProperty("user.home", "C:\\Users\\xenoa");
        java.lang.System.setProperty("user.language", "zh");
        java.lang.System.setProperty("user.name", "xenoa");
        java.lang.System.setProperty("user.timezone", "");
    }

    private static void initializeClasses() {
        org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(RootNode_ESTest_scaffolding.class.getClassLoader(),
                "org.apache.commons.lang3.NotImplementedException",
                "com.xenoamess.x8l.dealers.X8lDealer",
                "com.xenoamess.x8l.databind.x8lpath.X8lPathUtil",
                "com.xenoamess.x8l.X8lTree",
                "com.fasterxml.jackson.databind.JsonSerializable$Base",
                "org.dom4j.Node",
                "com.xenoamess.x8l.ContentNode",
                "com.xenoamess.x8l.AbstractTreeNode",
                "org.apache.commons.lang3.StringUtils",
                "com.xenoamess.x8l.CommentNode",
                "com.fasterxml.jackson.databind.node.ObjectNode",
                "com.xenoamess.x8l.dealers.LanguageDealer",
                "com.xenoamess.x8l.dealers.JsonDealer",
                "org.dom4j.DocumentException",
                "com.xenoamess.x8l.dealers.XmlDealer$1",
                "com.xenoamess.x8l.AbstractTreeNode$1",
                "com.fasterxml.jackson.databind.node.BaseJsonNode",
                "com.fasterxml.jackson.databind.JsonSerializable",
                "com.fasterxml.jackson.databind.node.ContainerNode",
                "com.xenoamess.x8l.dealers.XmlDealer$4",
                "com.xenoamess.x8l.X8lGrammarException",
                "com.fasterxml.jackson.databind.JsonNode",
                "com.xenoamess.x8l.dealers.XmlDealer$3",
                "com.xenoamess.x8l.dealers.XmlDealer$2",
                "com.xenoamess.x8l.databind.X8lDataBeanFieldScheme",
                "com.xenoamess.x8l.dealers.X8lDealer$3",
                "com.xenoamess.x8l.TextNode",
                "com.xenoamess.x8l.dealers.X8lDealer$4",
                "com.fasterxml.jackson.core.TreeNode",
                "com.xenoamess.x8l.dealers.X8lDealer$1",
                "com.xenoamess.x8l.dealers.X8lDealer$2",
                "org.dom4j.Branch",
                "com.fasterxml.jackson.databind.node.ArrayNode",
                "com.xenoamess.x8l.dealers.XmlDealer",
                "com.xenoamess.x8l.RootNode",
                "com.xenoamess.x8l.dealers.AbstractLanguageDealerHandler",
                "com.xenoamess.x8l.dealers.JsonDealer$3",
                "com.xenoamess.x8l.dealers.JsonDealer$2",
                "com.xenoamess.x8l.dealers.JsonDealer$1",
                "com.fasterxml.jackson.databind.node.JsonNodeCreator"
        );
    }

    private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException {
        mock(Class.forName("com.xenoamess.x8l.ContentNode", false, RootNode_ESTest_scaffolding.class.getClassLoader()));
    }

    private static void resetClasses() {
        org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(RootNode_ESTest_scaffolding.class.getClassLoader());

        org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
                "com.xenoamess.x8l.AbstractTreeNode",
                "com.xenoamess.x8l.ContentNode",
                "com.xenoamess.x8l.RootNode",
                "org.apache.commons.lang3.StringUtils",
                "com.xenoamess.x8l.dealers.LanguageDealer",
                "com.xenoamess.x8l.dealers.X8lDealer$1",
                "com.xenoamess.x8l.dealers.X8lDealer$2",
                "com.xenoamess.x8l.dealers.X8lDealer$3",
                "com.xenoamess.x8l.dealers.X8lDealer$4",
                "com.xenoamess.x8l.dealers.X8lDealer",
                "com.xenoamess.x8l.AbstractTreeNode$1",
                "com.xenoamess.x8l.databind.x8lpath.X8lPathUtil",
                "com.xenoamess.x8l.dealers.JsonDealer$1",
                "com.xenoamess.x8l.dealers.JsonDealer$2",
                "com.xenoamess.x8l.dealers.JsonDealer$3",
                "com.xenoamess.x8l.dealers.JsonDealer",
                "com.xenoamess.x8l.dealers.XmlDealer$1",
                "com.xenoamess.x8l.dealers.XmlDealer$2",
                "com.xenoamess.x8l.dealers.XmlDealer$3",
                "com.xenoamess.x8l.dealers.XmlDealer$4",
                "com.xenoamess.x8l.dealers.XmlDealer",
                "com.xenoamess.x8l.X8lTree",
                "org.apache.commons.lang3.NotImplementedException",
                "com.xenoamess.x8l.TextNode",
                "com.xenoamess.x8l.dealers.X8lStatusEnum",
                "com.xenoamess.x8l.CommentNode",
                "com.xenoamess.x8l.X8lGrammarException"
        );
    }
}
