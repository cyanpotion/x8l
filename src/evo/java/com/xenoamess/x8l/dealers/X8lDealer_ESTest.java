/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 05 20:55:53 GMT 2022
 */

package com.xenoamess.x8l.dealers;

import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;

import com.xenoamess.x8l.CommentNode;
import com.xenoamess.x8l.ContentNode;
import com.xenoamess.x8l.RootNode;
import com.xenoamess.x8l.TextNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class X8lDealer_ESTest extends X8lDealer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        X8lDealer x8lDealer0 = X8lDealer.INSTANCE;
        x8lDealer0.toString();
    }

    @Test(timeout = 4000)
    public void test01() throws Throwable {
        RootNode rootNode0 = new RootNode((ContentNode) null, 0);
        ContentNode contentNode0 = new ContentNode(rootNode0, 0);
        RootNode rootNode1 = new RootNode(contentNode0, 0);
        TextNode textNode0 = new TextNode(contentNode0, 0, "");
        textNode0.show();
    }

    @Test(timeout = 4000)
    public void test02() throws Throwable {
        X8lDealer x8lDealer0 = X8lDealer.INSTANCE;
        ContentNode contentNode0 = new ContentNode((ContentNode) null);
        RootNode rootNode0 = new RootNode(contentNode0);
        StringReader stringReader0 = new StringReader("7Y(P4$if8*Md&Z");
        StringWriter stringWriter0 = new StringWriter();
        ContentNode contentNode1 = new ContentNode(rootNode0);
        x8lDealer0.read((Reader) stringReader0, contentNode1);
        x8lDealer0.INSTANCE.write((Writer) stringWriter0, contentNode1);
    }

    @Test(timeout = 4000)
    public void test03() throws Throwable {
        RootNode rootNode0 = new RootNode((ContentNode) null);
        ContentNode contentNode0 = new ContentNode(rootNode0);
        contentNode0.addAttribute("", "", ":");
        contentNode0.show();
    }

    @Test(timeout = 4000)
    public void test04() throws Throwable {
        RootNode rootNode0 = new RootNode((ContentNode) null);
        ContentNode contentNode0 = new ContentNode(rootNode0);
        contentNode0.addAttribute("", " ", "");
        contentNode0.show();
    }

    @Test(timeout = 4000)
    public void test05() throws Throwable {
        X8lDealer x8lDealer0 = X8lDealer.INSTANCE;
        StringReader stringReader0 = new StringReader("%=");
        RootNode rootNode0 = new RootNode((ContentNode) null);
        rootNode0.addAttribute("", " ", "");
        x8lDealer0.read((Reader) stringReader0, (ContentNode) rootNode0);
    }

    @Test(timeout = 4000)
    public void test06() throws Throwable {
        X8lDealer x8lDealer0 = X8lDealer.INSTANCE;
        StringReader stringReader0 = new StringReader("Unexpected < in attribute area of a content node.");
        RootNode rootNode0 = new RootNode((ContentNode) null, 85);
        // Undeclared exception!
        try {
            x8lDealer0.INSTANCE.read((Reader) stringReader0, rootNode0);
            fail("Expecting exception: RuntimeException");

        } catch (RuntimeException e) {
            //
            // Unexpected stop of x8l file.
            //
            verifyException("com.xenoamess.x8l.dealers.X8lDealer$2", e);
        }
    }

    @Test(timeout = 4000)
    public void test07() throws Throwable {
        RootNode rootNode0 = new RootNode((ContentNode) null, 0);
        TextNode textNode0 = new TextNode(rootNode0, "");
        TextNode textNode1 = new TextNode(rootNode0, "");
        textNode1.show();
    }

    @Test(timeout = 4000)
    public void test08() throws Throwable {
        RootNode rootNode0 = new RootNode((ContentNode) null);
        TextNode textNode0 = new TextNode(rootNode0, " ");
        ContentNode contentNode0 = new ContentNode(rootNode0);
        contentNode0.show();
    }

    @Test(timeout = 4000)
    public void test09() throws Throwable {
        X8lDealer x8lDealer0 = X8lDealer.INSTANCE;
        StringReader stringReader0 = new StringReader("9Zne >c~7");
        RootNode rootNode0 = new RootNode((ContentNode) null, 26);
        // Undeclared exception!
        try {
            x8lDealer0.read((Reader) stringReader0, rootNode0);
            fail("Expecting exception: RuntimeException");

        } catch (RuntimeException e) {
            //
            // Unexpected stop of x8l file.
            //
            verifyException("com.xenoamess.x8l.dealers.X8lDealer$2", e);
        }
    }

    @Test(timeout = 4000)
    public void test10() throws Throwable {
        X8lDealer x8lDealer0 = X8lDealer.INSTANCE;
        StringReader stringReader0 = new StringReader("writer");
        CommentNode commentNode0 = new CommentNode((ContentNode) null, 89, "writer");
        boolean boolean0 = x8lDealer0.read((Reader) stringReader0, commentNode0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        X8lDealer x8lDealer0 = X8lDealer.INSTANCE;
        StringWriter stringWriter0 = new StringWriter();
        CommentNode commentNode0 = new CommentNode((ContentNode) null, "com.xenoamess.x8l.dealers.X8lDealer");
        boolean boolean0 = x8lDealer0.write((Writer) stringWriter0, commentNode0);
        assertEquals("<<com.xenoamess.x8l.dealers.X8lDealer>", stringWriter0.toString());
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test12() throws Throwable {
        X8lDealer x8lDealer0 = X8lDealer.INSTANCE;
        StringReader stringReader0 = new StringReader("%=");
        RootNode rootNode0 = new RootNode((ContentNode) null);
        TextNode textNode0 = new TextNode(rootNode0, " ");
        boolean boolean0 = x8lDealer0.read((Reader) stringReader0, textNode0);
        assertFalse(boolean0);
    }
}
