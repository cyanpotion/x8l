/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 05 20:55:02 GMT 2022
 */

package com.xenoamess.x8l;

import org.junit.Test;

import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;

import com.xenoamess.x8l.CommentNode;
import com.xenoamess.x8l.ContentNode;
import com.xenoamess.x8l.RootNode;

import java.io.Reader;
import java.io.StringReader;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class CommentNode_ESTest extends CommentNode_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        ContentNode contentNode0 = new ContentNode((ContentNode) null, (-1));
        CommentNode commentNode0 = new CommentNode(contentNode0, " ");
        StringReader stringReader0 = new StringReader(" ");
        contentNode0.read((Reader) stringReader0);
        String string0 = commentNode0.getTextContent();
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test01() throws Throwable {
        RootNode rootNode0 = new RootNode((ContentNode) null, 0);
        CommentNode commentNode0 = new CommentNode(rootNode0, " ");
        String string0 = commentNode0.getTextContent();
        assertEquals(" ", string0);
    }

    @Test(timeout = 4000)
    public void test02() throws Throwable {
        RootNode rootNode0 = new RootNode((ContentNode) null);
        CommentNode commentNode0 = new CommentNode(rootNode0, "");
        rootNode0.format(4800);
        // Undeclared exception!
        commentNode0.show();
    }

    @Test(timeout = 4000)
    public void test03() throws Throwable {
        ContentNode contentNode0 = new ContentNode((ContentNode) null, (-1));
        CommentNode commentNode0 = new CommentNode(contentNode0, " ");
        StringReader stringReader0 = new StringReader(" ");
        contentNode0.read((Reader) stringReader0);
        // Undeclared exception!
        try {
            commentNode0.show();
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Argument for @NotNull parameter 'originalString' of com/xenoamess/x8l/X8lTree.transcodeComment must not be null
            //
            verifyException("com.xenoamess.x8l.X8lTree", e);
        }
    }

    @Test(timeout = 4000)
    public void test04() throws Throwable {
        ContentNode contentNode0 = new ContentNode((ContentNode) null);
        CommentNode commentNode0 = new CommentNode(contentNode0, "");
        commentNode0.close();
        // Undeclared exception!
        try {
            commentNode0.equals(commentNode0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test05() throws Throwable {
        ContentNode contentNode0 = new ContentNode((ContentNode) null, 3335);
        RootNode rootNode0 = new RootNode(contentNode0);
        CommentNode commentNode0 = null;
        try {
            commentNode0 = new CommentNode(rootNode0, (-1), "");
            fail("Expecting exception: IndexOutOfBoundsException");

        } catch (IndexOutOfBoundsException e) {
            //
            // Index: -1, Size: 0
            //
            verifyException("java.util.ArrayList", e);
        }
    }

    @Test(timeout = 4000)
    public void test06() throws Throwable {
        CommentNode commentNode0 = new CommentNode((ContentNode) null, 400, "-azFUdy08x&A9e),EK ");
        commentNode0.clear();
        // Undeclared exception!
        try {
            commentNode0.format(0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.xenoamess.x8l.CommentNode", e);
        }
    }

    @Test(timeout = 4000)
    public void test07() throws Throwable {
        CommentNode commentNode0 = new CommentNode((ContentNode) null, 0, "65lY04:y;cv[V.F_3R");
        commentNode0.setTextContent("65lY04:y;cv[V.F_3R");
        assertEquals("65lY04:y;cv[V.F_3R", commentNode0.getTextContent());
    }

    @Test(timeout = 4000)
    public void test08() throws Throwable {
        ContentNode contentNode0 = new ContentNode((ContentNode) null);
        CommentNode commentNode0 = new CommentNode(contentNode0, "");
        String string0 = commentNode0.getTextContent();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test09() throws Throwable {
        RootNode rootNode0 = new RootNode((ContentNode) null);
        CommentNode commentNode0 = new CommentNode(rootNode0, "");
        boolean boolean0 = commentNode0.equals(rootNode0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test10() throws Throwable {
        CommentNode commentNode0 = new CommentNode((ContentNode) null, (String) null);
        boolean boolean0 = commentNode0.equals((Object) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        ContentNode contentNode0 = new ContentNode((ContentNode) null);
        CommentNode commentNode0 = new CommentNode(contentNode0, "");
        boolean boolean0 = commentNode0.equals(commentNode0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test12() throws Throwable {
        CommentNode commentNode0 = new CommentNode((ContentNode) null, 21, (String) null);
        assertEquals("", commentNode0.getTextContent());
    }

    @Test(timeout = 4000)
    public void test13() throws Throwable {
        ContentNode contentNode0 = new ContentNode((ContentNode) null, (-1));
        CommentNode commentNode0 = new CommentNode(contentNode0, " ");
        commentNode0.show();
        assertEquals(" ", commentNode0.getTextContent());
    }

    @Test(timeout = 4000)
    public void test14() throws Throwable {
        ContentNode contentNode0 = new ContentNode((ContentNode) null, (-1));
        CommentNode commentNode0 = new CommentNode(contentNode0, " ");
        CommentNode commentNode1 = commentNode0.copy();
        assertEquals(" ", commentNode1.getTextContent());
    }

    @Test(timeout = 4000)
    public void test15() throws Throwable {
        ContentNode contentNode0 = new ContentNode((ContentNode) null);
        CommentNode commentNode0 = new CommentNode(contentNode0, "");
        commentNode0.format((-1756));
        assertEquals("", commentNode0.getTextContent());
    }
}
