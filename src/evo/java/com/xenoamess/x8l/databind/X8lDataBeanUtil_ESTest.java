/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 05 20:53:57 GMT 2022
 */

package com.xenoamess.x8l.databind;

import java.io.PipedReader;
import java.io.Reader;

import com.xenoamess.x8l.X8lTree;
import com.xenoamess.x8l.dealers.LanguageDealer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.fail;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class X8lDataBeanUtil_ESTest extends X8lDataBeanUtil_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0() throws Throwable {
        TestDataBean1 testDataBean1_0 = new TestDataBean1();
        X8lTree x8lTree0 = new X8lTree();
        X8lDataBeanUtil.loadFromX8lTree((X8lDataBean) testDataBean1_0, x8lTree0);
    }

    @Test(timeout = 4000)
    public void test1() throws Throwable {
        PipedReader pipedReader0 = new PipedReader();
        LanguageDealer languageDealer0 = new LanguageDealer();
        X8lTree x8lTree0 = X8lTree.load((Reader) pipedReader0, languageDealer0);
        TestDataBean4 testDataBean4_0 = new TestDataBean4();
        X8lDataBeanUtil.loadFromX8lTree(testDataBean4_0, x8lTree0);
    }

    @Test(timeout = 4000)
    public void test2() throws Throwable {
        X8lTree x8lTree0 = new X8lTree();
        // Undeclared exception!
        try {
            X8lDataBeanUtil.buildFromX8lTree((Class<TestDataBean1>) null, x8lTree0);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Argument for @NotNull parameter 'tClass' of com/xenoamess/x8l/databind/X8lDataBeanUtil.buildFromX8lTree must not be null
            //
            verifyException("com.xenoamess.x8l.databind.X8lDataBeanUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test3() throws Throwable {
        X8lTree x8lTree0 = new X8lTree();
        Class<TestDataBean2> class0 = TestDataBean2.class;
        TestDataBean2 testDataBean2_0 = X8lDataBeanUtil.buildFromX8lTree(class0, x8lTree0);
        assertNotNull(testDataBean2_0);
    }

    @Test(timeout = 4000)
    public void test4() throws Throwable {
        TestDataBean1 testDataBean1_0 = new TestDataBean1();
        // Undeclared exception!
        try {
            X8lDataBeanUtil.loadFromX8lTree(testDataBean1_0, (X8lTree) null);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Argument for @NotNull parameter 'x8lTree' of com/xenoamess/x8l/databind/X8lDataBeanUtil.loadFromX8lTree must not be null
            //
            verifyException("com.xenoamess.x8l.databind.X8lDataBeanUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test5() throws Throwable {
        X8lTree x8lTree0 = new X8lTree();
        // Undeclared exception!
        try {
            X8lDataBeanUtil.loadFromX8lTree((TestDataBean1) null, x8lTree0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.xenoamess.x8l.databind.X8lDataBeanUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test6() throws Throwable {
        X8lDataBeanUtil x8lDataBeanUtil0 = new X8lDataBeanUtil();
    }
}
